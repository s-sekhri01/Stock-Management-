
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vasud
 */
public class categoryframe extends javax.swing.JInternalFrame implements myvars{

    /**
     * Creates new form categoryframe
     */
    public categoryframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Categories");

        jLabel2.setText("Category name");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category Id", "Category Name"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Delete");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel2)
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)))
                        .addGap(0, 70, Short.MAX_VALUE)))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3))))))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       //Add Category
        try
        {
            Connection mycon=DriverManager.getConnection(myurl,dbuser,dbpass);
            try
            {
             String q="insert into categorytable (catname) values(?)";
             PreparedStatement myst=mycon.prepareStatement(q);
             myst.setString(1, jTextField1.getText());
            
             int count =myst.executeUpdate();
             
             if(count==1)
             {
                 JOptionPane.showMessageDialog(rootPane,"Category added Successfully");
                 getdata();
             }
             else
             {
                 JOptionPane.showMessageDialog(rootPane,"Category not added successfully");
             }
             // To imediately show the added category in table
//                        try
//                         {
//                          String s="select catid from categorytable where catname=?";
//                          PreparedStatement mystat=mycon.prepareStatement(s);
//                          mystat.setString(1, jTextField1.getText());
//
//                          ResultSet myres=mystat.executeQuery();
//
//                          if(myres.next()==true)
//                          {
//                           String catid= myres.getString("CatId");
//                           DefaultTableModel mymodel =(DefaultTableModel)jTable1.getModel();
//                           String catname=jTextField1.getText();
//                           Object row[]={catid,catname};
//                           mymodel.addRow(row);
//
//                         }
//
//                        }
//                       catch(Exception e)
//                         {
//                          JOptionPane.showMessageDialog(rootPane, "Error " + e.getMessage());
//                           }
        //contine add code
                          
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error "+e.getMessage());
            }
            finally
            {
                mycon.close();
            }
                    
        }
        catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error is "+e.getMessage());
                }
        clearfields();
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // show previous categories as soon as frame opens
       getdata();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // to show the selected category in fields
        String catidref= jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        
        try
        {
            Connection mycon=DriverManager.getConnection(myurl,dbuser,dbpass);
            try
            {
             String q="select catname from categorytable where catid=?";
             PreparedStatement myst=mycon.prepareStatement(q);
             myst.setString(1,catidref);
            
             ResultSet myres=myst.executeQuery();
             
             if(myres.next()==true)
             {
               jTextField1.setText(myres.getString("catname"));
               
                jButton2.setEnabled(true);
                jButton3.setEnabled(true);
 
            }
           else
              {
                JOptionPane.showMessageDialog(rootPane, "Cannot Fetch Data");
                 clearfields();
                 jButton2.setEnabled(false);
                 jButton3.setEnabled(false);
                }

           }
          catch(Exception e)
            {
             JOptionPane.showMessageDialog(rootPane, "Error " + e.getMessage());
              }
           finally
             {
              mycon.close();
              }
         }
        catch(Exception e)
          {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
           }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      // Delete button
        int choice=JOptionPane.showConfirmDialog(rootPane, "Are you sure to delete this record","Confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE );
        
        if(choice==JOptionPane.YES_OPTION)
        {
        
        try
        {
            Connection mycon=DriverManager.getConnection(myurl,dbuser,dbpass);
            try
            {
             String catidref= jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
             String q="delete from categorytable where catid=?";
             PreparedStatement myst=mycon.prepareStatement(q);
             myst.setString(1,catidref);
            
             int s=myst.executeUpdate();
             if(s==1)
             {
                JOptionPane.showMessageDialog(rootPane, "Category deleted Successfully");
                 clearfields();
                 getdata();
                 
                // Readding categories so that the deleted category is not shown
                
//                        try
//                        {
//                         DefaultTableModel mymodel1 =(DefaultTableModel)jTable1.getModel();
//                         String qu="select * from categorytable";
//                         PreparedStatement mysta= mycon.prepareStatement(qu);
//                         ResultSet myres=mysta.executeQuery();
//
//                         if(myres.next()==true)
//                         {
//                           do
//                           {
//
//                             String catid,catname;
//                             catid=myres.getString("CatId");
//                             catname=myres.getString("CatName");
//
//                            Object myrow[] = {catid,catname};
//
//                            mymodel1.addRow(myrow);
//                           }
//                            while(myres.next());
//
//                        }
//                        else
//                          {
//                            JOptionPane.showMessageDialog(rootPane, "No Records found");
//                             clearfields();
//
//                             mymodel.setRowCount(0);
//                            }
//
//                       }
//                      catch(Exception e)
//                        {
//                         JOptionPane.showMessageDialog(rootPane, "Error " + e.getMessage());
//                          }
                       
                 
                 jButton2.setEnabled(false);
                 jButton3.setEnabled(false);
            }
           else
              {
                JOptionPane.showMessageDialog(rootPane, "Category not deleted Successfully");
                 clearfields();
                 jButton2.setEnabled(false);
                 jButton3.setEnabled(false);
                }

           }
          catch(Exception e)
            {
             JOptionPane.showMessageDialog(rootPane, "Error " + e.getMessage());
              }
           finally
             {
              mycon.close();
              }
         }
        catch(Exception e)
          {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
           }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //update button
        try
        {
           Connection mycon=DriverManager.getConnection(myurl,dbuser,dbpass);
            try
            {
             String catidref= jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
             String q="update categorytable set catname=? where catid=?";
             PreparedStatement myst=mycon.prepareStatement(q);
             myst.setString(1, jTextField1.getText());
             myst.setString(2, catidref);
             
             int count =myst.executeUpdate();
             if(count==1)
             {
                 JOptionPane.showMessageDialog(rootPane,"Category updated Successfully");
                 clearfields();
                 getdata();
                // Readding categories so that the updated category is shown
                
//                        try
//                        {
//                         DefaultTableModel mymodel1 =(DefaultTableModel)jTable1.getModel();
//                         String qu="select * from categorytable";
//                         PreparedStatement mysta= mycon.prepareStatement(qu);
//                         ResultSet myres=mysta.executeQuery();
//
//                         if(myres.next()==true)
//                         {
//                           do
//                           {
//
//                             String catid,catname;
//                             catid=myres.getString("CatId");
//                             catname=myres.getString("CatName");
//
//                            Object myrow[] = {catid,catname};
//
//                            mymodel1.addRow(myrow);
//                           }
//                            while(myres.next());
//
//                        }
//                        else
//                          {
//                            JOptionPane.showMessageDialog(rootPane, "No Records found");
//                             clearfields();
//
//                             mymodel.setRowCount(0);
//                            }
//
//                       }
//                      catch(Exception e)
//                        {
//                         JOptionPane.showMessageDialog(rootPane, "Error " + e.getMessage());
//                          }
                       
                 
                 jButton2.setEnabled(false);
                 jButton3.setEnabled(false);
             }
             else
             {
                 JOptionPane.showMessageDialog(rootPane,"Category not updated successfully");
             }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error "+e.getMessage());
            }
            finally
            {
                mycon.close();
            }
                    
        }
        catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error is "+e.getMessage());
                }
        
    }//GEN-LAST:event_jButton3ActionPerformed
       void clearfields()
        {
            jTextField1.setText(null);
        }
       void getdata()
       {
            try
        {
            Connection mycon=DriverManager.getConnection(myurl,dbuser,dbpass);
            try
            {
             DefaultTableModel mymodel =(DefaultTableModel)jTable1.getModel();
             String q="select * from categorytable";
             PreparedStatement myst=mycon.prepareStatement(q);
             ResultSet myres=myst.executeQuery();
             
             if(myres.next()==true)
             {
                 mymodel.setRowCount(0);
               do
               {
                 
                 String catid,catname;
                 catid=myres.getString("CatId");
                 catname=myres.getString("CatName");
                 
                Object myrow[] = {catid,catname};

                mymodel.addRow(myrow);
               }
                while(myres.next());
            
            }
           else
              {
                JOptionPane.showMessageDialog(rootPane, "No Records found");
                 clearfields();
                 
                 mymodel.setRowCount(0);
                }

           }
          catch(Exception e)
            {
             JOptionPane.showMessageDialog(rootPane, "Error " + e.getMessage());
              }
           finally
             {
              mycon.close();
              }
         }
        catch(Exception e)
          {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
           }
       }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
